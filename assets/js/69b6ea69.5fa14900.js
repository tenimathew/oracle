"use strict";(self.webpackChunkoracle=self.webpackChunkoracle||[]).push([[379],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),g=c(n),m=o,y=g["".concat(i,".").concat(m)]||g[m]||p[m]||a;return n?r.createElement(y,s(s({ref:t},l),{},{components:n})):r.createElement(y,s({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=g;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:o,s[1]=u;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2699:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],u={id:"Section 8. More on Groupings",sidebar_position:8,description:"CUBE, ROLLUP, PIVOT, UNPIVOT"},i=void 0,c={unversionedId:"oracle-basics/Section 8. More on Groupings",id:"oracle-basics/Section 8. More on Groupings",title:"Section 8. More on Groupings",description:"CUBE, ROLLUP, PIVOT, UNPIVOT",source:"@site/docs/oracle-basics/grouping-sets.md",sourceDirName:"oracle-basics",slug:"/oracle-basics/Section 8. More on Groupings",permalink:"/oracle/oracle-basics/Section 8. More on Groupings",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"Section 8. More on Groupings",sidebar_position:8,description:"CUBE, ROLLUP, PIVOT, UNPIVOT"},sidebar:"tutorialSidebar",previous:{title:"Section 7. Set Operators",permalink:"/oracle/oracle-basics/Section 7. Set Operators"},next:{title:"Tutorial - Basics",permalink:"/oracle/category/tutorial---basics"}},l={},p=[{value:"GROUPING SETS",id:"grouping-sets",level:2},{value:"GROUPING() function",id:"grouping-function",level:3},{value:"GROUPING_ID() function",id:"grouping_id-function",level:3},{value:"CUBE",id:"cube",level:2}],g={toc:p};function m(e){var t=e.components,u=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},g,u,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"grouping-sets"},"GROUPING SETS"),(0,a.kt)("p",null,"A grouping set is a grouping of one or more columns by which you group using the ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause. A grouping set is denoted by a list of comma-separated columns in parentheses. A ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUPING SETS")," expression allows you to selectively define one or more grouping sets in a query."),(0,a.kt)("p",null,"This query returns a grouping set that includes the category column, (category) grouping set:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT category, SUM(sales_amount)\nFROM customer_category_sales\nGROUP BY category;\n")),(0,a.kt)("p",null,"The following query defines another grouping set that includes the customer column, or (customer) grouping set"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT customer, SUM(sales_amount)\nFROM customer_category_sales\nGROUP BY customer;\n")),(0,a.kt)("p",null,"This query returns a grouping set that includes both columns customer and category, or (customer, category) grouping set"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT customer, category, sales_amount\nFROM customer_category_sales\nORDER BY customer, category;\n")),(0,a.kt)("p",null,"A grouping sets may include zero column. In this case, it is an empty grouping set, which is denoted by (). The following query doesn\u2019t use the ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause, therefore, it returns an empty grouping set ():"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT SUM(sales_amount)\nFROM customer_category_sales;\n")),(0,a.kt)("p",null,"So far, we have four queries that return 4 grouping sets: (category), (customer), (category, customer), and ()."),(0,a.kt)("p",null,"If you want to return four grouping sets in one query, you need to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"UNION ALL")," operator."),(0,a.kt)("p",null,"However, the ",(0,a.kt)("inlineCode",{parentName:"p"},"UNION ALL")," operator requires all involved queries return the same number of columns. Therefore, to make it works, you need to add NULL to the select list of each query as shown in the following query:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT category, NULL, SUM(sales_amount)\nFROM customer_category_sales\nGROUP BY category\n\nUNION ALL\n\nSELECT customer, NULL, SUM(sales_amount)\nFROM customer_category_sales\nGROUP BY customer\n\nUNION ALL\n\nSELECT customer, category, sum(sales_amount)\nFROM customer_category_sales\nGROUP BY customer, category\n\nUNION ALL\n\nSELECT NULL, NULL, SUM(sales_amount)\nFROM customer_category_sales;\n")),(0,a.kt)("p",null,"This query has two main issues:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"It is so lengthy that make it difficult to read and maintain."),(0,a.kt)("li",{parentName:"ul"},"Its performance is not optimal because Oracle has to execute 4 queries separately first and then combine all the immediate result sets into a single one.")),(0,a.kt)("p",null,"Back to our query example that uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"UNION ALL")," operators above, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUPING SETS")," instead:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT customer, category, SUM(sales_amount)\nFROM customer_category_sales\nGROUP BY\n    GROUPING SETS(\n        (customer,category),\n        (customer),\n        (category),\n        ()\n    )\nORDER BY customer, category;\n")),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(2038).Z,width:"385",height:"316"})),(0,a.kt)("p",null,"In this output, rows whose column have NULL are super-aggregate rows. For example, the row number 5, 10 and 15."),(0,a.kt)("h3",{id:"grouping-function"},"GROUPING() function"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUPING()")," function differentiates the super-aggregate rows from regular grouped rows."),(0,a.kt)("p",null,"The expression must match with the expression in the ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUPING()")," function returns a value of 1 when the value of expression in the row is NULL representing the set of all values. Otherwise, it returns 0."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT customer, category,\n    GROUPING(customer) customer_grouping,\n    GROUPING(category) category_grouping,\n    SUM(sales_amount)\nFROM customer_category_sales\nGROUP BY\n    GROUPING SETS(\n        (customer,category),\n        (customer),\n        (category),\n        ()\n    )\nORDER BY customer, category;\n")),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(1183).Z,width:"618",height:"318"})),(0,a.kt)("p",null,"To make the output more readable, you can combine the ",(0,a.kt)("inlineCode",{parentName:"p"},"DECODE()")," function with the ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUPING()")," function as shown in the following query:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    DECODE(GROUPING(customer),1,'ALL customers', customer) customer,\n    DECODE(GROUPING(category),1,'ALL categories', category) category,\n    SUM(sales_amount)\nFROM customer_category_sales\nGROUP BY\n    GROUPING SETS(\n        (customer,category),\n        (customer),\n        (CATEGORY),\n        ()\n    )\nORDER BY customer, category;\n")),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(9853).Z,width:"363",height:"320"})),(0,a.kt)("h3",{id:"grouping_id-function"},"GROUPING_ID() function"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUPING_ID()")," function takes the \u201cgroup by\u201d columns and returns a number denoting the GROUP BY level. In other words, it provides another compact way to identify the subtotal rows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT customer, category,\n    GROUPING_ID(customer,category) grouping,\n    SUM(sales_amount)\nFROM customer_category_sales\nGROUP BY\n    GROUPING SETS(\n        (customer,category),\n        (customer),\n        (category),\n        ()\n    )\nORDER BY customer, category;\n")),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(5375).Z,width:"421",height:"321"})),(0,a.kt)("h2",{id:"cube"},"CUBE"))}m.isMDXComponent=!0},2038:function(e,t,n){t.Z=n.p+"assets/images/2022-05-30-23-15-30-d513840383a60e651508799a0a46f97c.png"},1183:function(e,t,n){t.Z=n.p+"assets/images/2022-05-30-23-18-20-26112f8b4e0bbb8114a15a58bf2558e5.png"},9853:function(e,t,n){t.Z=n.p+"assets/images/2022-05-30-23-19-09-eabaf4041ee4501ea6c11a6fd1f85121.png"},5375:function(e,t,n){t.Z=n.p+"assets/images/2022-05-30-23-20-17-37e46a20bdec3e55579f772745c96517.png"}}]);