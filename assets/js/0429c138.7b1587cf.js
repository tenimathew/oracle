"use strict";(self.webpackChunkoracle=self.webpackChunkoracle||[]).push([[686],{3905:function(e,n,a){a.d(n,{Zo:function(){return c},kt:function(){return m}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=t.createContext({}),d=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},c=function(e){var n=d(e.components);return t.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,N=p["".concat(i,".").concat(m)]||p[m]||u[m]||l;return a?t.createElement(N,o(o({ref:n},c),{},{components:a})):t.createElement(N,o({ref:n},c))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=p;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<l;d++)o[d]=a[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},6679:function(e,n,a){a.r(n),a.d(n,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var t=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],s={id:"Section 17. Jobs",sidebar_position:17,description:"Scheduler, Jobs"},i=void 0,d={unversionedId:"oracle-basics/Section 17. Jobs",id:"oracle-basics/Section 17. Jobs",title:"Section 17. Jobs",description:"Scheduler, Jobs",source:"@site/docs/oracle-basics/jobs.md",sourceDirName:"oracle-basics",slug:"/oracle-basics/Section 17. Jobs",permalink:"/oracle/oracle-basics/Section 17. Jobs",draft:!1,tags:[],version:"current",sidebarPosition:17,frontMatter:{id:"Section 17. Jobs",sidebar_position:17,description:"Scheduler, Jobs"},sidebar:"tutorialSidebar",previous:{title:"Section 16. Synonym, Sequence",permalink:"/oracle/oracle-basics/Section 16. Synonym, Sequence"},next:{title:"Section 18. Functions",permalink:"/oracle/oracle-basics/Section 18. Functions"}},c={},u=[{value:"<code>DBMS_SCHEDULER</code>",id:"dbms_scheduler",level:2},{value:"Create a schedule",id:"create-a-schedule",level:3},{value:"Create a program",id:"create-a-program",level:3},{value:"Create job",id:"create-job",level:3},{value:"Instead of creating scheduler,job and program separately, we can create the scheduler job with below commad directly.",id:"instead-of-creating-schedulerjob-and-program-separately-we-can-create-the-scheduler-job-with-below-commad-directly",level:3},{value:"View schedule details of all schedulers:",id:"view-schedule-details-of-all-schedulers",level:3},{value:"Enable a job",id:"enable-a-job",level:3},{value:"Disable a job",id:"disable-a-job",level:3},{value:"Stop a running job",id:"stop-a-running-job",level:3},{value:"Drop a running job",id:"drop-a-running-job",level:3},{value:"Run a job immediately",id:"run-a-job-immediately",level:3},{value:"Drop a schedule:",id:"drop-a-schedule",level:3},{value:"Drop a scheduler job:",id:"drop-a-scheduler-job",level:3},{value:"Scheduler shell script in dbms_scheduler:",id:"scheduler-shell-script-in-dbms_scheduler",level:3},{value:"Monitor scheduler jobs:",id:"monitor-scheduler-jobs",level:3},{value:"Get DDL of a scheduler job:",id:"get-ddl-of-a-scheduler-job",level:3},{value:"Copy scheduler job from one user to another :",id:"copy-scheduler-job-from-one-user-to-another-",level:3},{value:"Get log information of scheduler jobs:",id:"get-log-information-of-scheduler-jobs",level:3},{value:"History of all scheduler job runs:",id:"history-of-all-scheduler-job-runs",level:3},{value:"Managing scheduler credentials:",id:"managing-scheduler-credentials",level:3},{value:"View and manage auto task jobs in database:",id:"view-and-manage-auto-task-jobs-in-database",level:3},{value:"<code>DBMS_JOB</code>",id:"dbms_job",level:2},{value:"DBMS_JOB.SUBMIT",id:"dbms_jobsubmit",level:3},{value:"DBMS_JOB.CHANGE",id:"dbms_jobchange",level:3},{value:"DBMS_JOB.RUN",id:"dbms_jobrun",level:3},{value:"BROKEN Procedure",id:"broken-procedure",level:3},{value:"INTERVAL Procedure",id:"interval-procedure",level:3},{value:"NEXT_DATE Procedure",id:"next_date-procedure",level:3},{value:"REMOVE Procedure",id:"remove-procedure",level:3},{value:"WHAT Procedure",id:"what-procedure",level:3},{value:"Difference of <code>DBMS_JOB</code> and <code>DBMS_SCHEDULER</code>",id:"difference-of-dbms_job-and-dbms_scheduler",level:2},{value:"Benefits that <code>DBMS_SCHEDULER</code> has over cron:",id:"benefits-that-dbms_scheduler-has-over-cron",level:2},{value:"Advantages of using OS cron:",id:"advantages-of-using-os-cron",level:2}],p={toc:u};function m(e){var n=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"dbms_scheduler"},(0,l.kt)("inlineCode",{parentName:"h2"},"DBMS_SCHEDULER")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DBMS_SCHEDULER")," package provides a collection of scheduling functions and procedures that can be called from any PL/SQL program."),(0,l.kt)("li",{parentName:"ul"},"Only ",(0,l.kt)("inlineCode",{parentName:"li"},"SYS")," can perform actions on objects in the ",(0,l.kt)("inlineCode",{parentName:"li"},"SYS")," schema.")),(0,l.kt)("h3",{id:"create-a-schedule"},"Create a schedule"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A schedule defines the start date, end time and repeat interval details")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN\n    DBMS_SCHEDULER.CREATE_SCHEDULE (\n        Schedule_name => 'DAILYBILLINGJOB',\n        Start_date => SYSTIMESTAMP,\n        Repeat_interval =>'FREQ=DAILY;BYHOUR=11; BYMINUTE=30',\n        Comments => 'DAILY BILLING JOB'\n        );\nEND;\n")),(0,l.kt)("h3",{id:"create-a-program"},"Create a program"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A program defines the name and type of the procedure, executed .package or script which executed.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN\nDBMS_SCHEDULER.CREATE_PROGRAM (\n    program_name => 'DAILYBILLINGJOB',\n    program_type => 'STORED_PROCEDURE',\n    program_action => 'DAILYJOB.BILLINGPROC',\n    number_of_arguments =>0,\n    enabled => TRUE,\n    comments => 'DAILY BILLING JOB'\n    );\nEND;\n")),(0,l.kt)("h3",{id:"create-job"},"Create job"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A job defines the schedule name and the program name.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_SCHEDULER.CREATE_JOB (\n    job_name => 'DAILYBILLINGJOB_RUN',\n    program_name => 'DAILYBILLINGJOB',\n    schedule_name => 'DAILYBILLINGJOB_SCHED',\n    enabled => FLASE,\n    comments => 'daily billing job'\n    );\nEND;\n")),(0,l.kt)("h3",{id:"instead-of-creating-schedulerjob-and-program-separately-we-can-create-the-scheduler-job-with-below-commad-directly"},"Instead of creating scheduler,job and program separately, we can create the scheduler job with below commad directly."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Simple command to create scheduler job:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN\nDBMS_SCHEDULER.CREATE_JOB (\n    job_name => '\"HWS\".\"MV_REF_DBA_DATA\"',\n    job_type => 'PLSQL_BLOCK',\n    job_action => 'dbms_refresh.refresh(''\"HWS\".\"STC_NEXT_DBA_MV_DATA\"'');',\n    number_of_arguments => 0,\n    start_date => NULL,\n    repeat_interval => 'FREQ=DAILY;BYHOUR=8;BYMINUTE=00;BYSECOND=00',\n    end_date => NULL,\n    enabled => FALSE,\n    auto_drop => FALSE,\n    comments => 'Converted_dba_jobs'\n    );\n\nDBMS_SCHEDULER.enable( name => '\"HWS\".\"MV_REF_FTTH_DATA\"');\nEND;\n")),(0,l.kt)("h3",{id:"view-schedule-details-of-all-schedulers"},"View schedule details of all schedulers:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"set pagesize 200\nset lines 299\ncol START_DATE for a45\ncol REPEAT_INTERVAL for a45\ncol schedule_name for a34\n\nselect\n    schedule_name,\n    schedule_type,\n    start_date,\n    repeat_interval\nfrom dba_scheduler_schedules;\n")),(0,l.kt)("h3",{id:"enable-a-job"},"Enable a job"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"EXECUTE DBMS_SCHEDULER.ENABLE('SCOTT.MONTHLYBILLING');\n")),(0,l.kt)("h3",{id:"disable-a-job"},"Disable a job"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"EXECUTE DBMS_SCHEDULER.DISABLE('SCOTT.MONTHLYBILLING');\n")),(0,l.kt)("h3",{id:"stop-a-running-job"},"Stop a running job"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"EXECUTE DBMS_SCHEDULER.STOP_JOB('SCOTT.MONTHLYBILLING');\n")),(0,l.kt)("h3",{id:"drop-a-running-job"},"Drop a running job"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"EXECUTE DBMS_SCHEDULER.DROP_JOB('SCOTT.MONTHLYBILLING');\n")),(0,l.kt)("h3",{id:"run-a-job-immediately"},"Run a job immediately"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"EXECUTE DBMS_SCHEDULER.RUN_JOB('SCOTT.MONTHLYBILLING');\n")),(0,l.kt)("h3",{id:"drop-a-schedule"},"Drop a schedule:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN\n    DBMS_SCHEDULER.DROP_SCHEDULE(\n        schedule_name => 'DAILYBILLINGJOB_SCHED',\n        force => TRUE\n        );\nEND;\n")),(0,l.kt)("h3",{id:"drop-a-scheduler-job"},"Drop a scheduler job:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_SCHEDULER.drop_job (job_name => 'SCOTT.MONTHLYBILLING');\n")),(0,l.kt)("h3",{id:"scheduler-shell-script-in-dbms_scheduler"},"Scheduler shell script in dbms_scheduler:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"This feature in available from oracle 12c onward")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Create a credential store:"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN\ndbms_credential.create_credential (\n    CREDENTIAL_NAME => 'ORACLEOSUSER',\n    USERNAME => 'oracle',\n    PASSWORD => 'oracle@98765',\n    DATABASE_ROLE => NULL,\n    WINDOWS_DOMAIN => NULL,\n    COMMENTS => 'Oracle OS User',\n    ENABLED => true\n    );\nEND;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Then create the job:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"exec dbms_scheduler.create_job(\n    job_name=>'myscript4',\n    job_type=>'external_script',\n    job_action=>'/export/home/oracle/ttest.2.sh',\n    enabled=>true,\n    START_DATE=>sysdate,\n    REPEAT_INTERVAL =>'FREQ=MINUTELY; byminute=1',\n    auto_drop=>false,\n    credential_name=>'ORACLEOSUSER'\n);\n")),(0,l.kt)("h3",{id:"monitor-scheduler-jobs"},"Monitor scheduler jobs:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Monitor currently running jobs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT job_name, session_id, running_instance, elapsed_time, FROM dba_scheduler_running_jobs;\n")),(0,l.kt)("p",null,"\u2014 View the job run details"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from DBA_SCHEDULER_JOB_RUN_DETAILS;\n")),(0,l.kt)("p",null,"\u2014 View the job-related logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select * from DBA_SCHEDULER_JOB_LOG;\n")),(0,l.kt)("h3",{id:"get-ddl-of-a-scheduler-job"},"Get DDL of a scheduler job:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"select dbms_metadata.get_ddl('PROCOBJ','DUP_ACC','SCOTT') from dual;\n")),(0,l.kt)("h3",{id:"copy-scheduler-job-from-one-user-to-another-"},"Copy scheduler job from one user to another :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"exec dbms_scheduler.copy_job('SCOTT.MY_JOB_2','DBACLASS.MY_JOB_2');\n")),(0,l.kt)("h3",{id:"get-log-information-of-scheduler-jobs"},"Get log information of scheduler jobs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"set pagesize 299\nset lines 299\ncol job_name for a24\ncol log_date for a40\ncol operation for a19\ncol additional_info a79\n\nselect job_name,\n    log_date,\n    status,\n    OPERATION,\n    ADDITIONAL_INFO\nfrom dba_scheduler_job_log\norder by log_date desc;\n")),(0,l.kt)("h3",{id:"history-of-all-scheduler-job-runs"},"History of all scheduler job runs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"set pagesize 299\nset lines 299\ncol JOB_NAME for a24\ncol actual_start_date for a56\ncol RUN_DURATION for a34\n\nselect job_name,\n    status,\n    actual_start_date,\n    run_duration\nfrom DBA_SCHEDULER_JOB_RUN_DETAILS\norder by ACTUAL_START_DATE desc;\n")),(0,l.kt)("h3",{id:"managing-scheduler-credentials"},"Managing scheduler credentials:"),(0,l.kt)("p",null,"\u2014 Create a credential:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN dbms_credential.create_credential ( CREDENTIAL_NAME => 'ORACLEOSUSER', USERNAME => 'oracle', PASSWORD => 'oracle@123', DATABASE_ROLE => NULL, WINDOWS_DOMAIN => NULL, COMMENTS => 'Oracle OS User', ENABLED => true ); END; /\n")),(0,l.kt)("p",null,"\u2014 Drop a credential"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"exec dbms_scheduler.drop_credential('ORACLEOSUSER');\n")),(0,l.kt)("p",null,"\u2014 View credential details"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"}," select owner,CREDENTIAL_NAME,USERNAME,ENABLED from DBA_CREDENTIALS;\n\u2014 Change username and password in a credentials :\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"exec DBMS_SCHEDULER.SET_ATTRIBUTE(name=>'ORACLEOSUSER',attribute=>'password',value=>'oracle');\n")),(0,l.kt)("h3",{id:"view-and-manage-auto-task-jobs-in-database"},"View and manage auto task jobs in database:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"set lines 180\npages 1000\ncol client_name for a40\ncol attributes for a60\n\nselect client_name,\n    status,\n    attributes,\n    service_name\nfrom dba_autotask_client\n/\n\nBEGIN\nDBMS_AUTO_TASK_ADMIN.disable(\n    client_name => 'auto space advisor',\n    operation => NULL,\n    window_name => NULL\n);\nEND;\n/\n\nBEGIN\nDBMS_AUTO_TASK_ADMIN.disable(\n    client_name => 'sql tuning advisor',\n    operation => NULL,\n    window_name => NULL\n);\nEND;\n/\n\nBEGIN\nDBMS_AUTO_TASK_ADMIN.disable(\n    client_name => 'auto optimizer stats collection',\n    operation => NULL,\n    window_name => NULL\n);\nEND;\n/\n\n")),(0,l.kt)("h2",{id:"dbms_job"},(0,l.kt)("inlineCode",{parentName:"h2"},"DBMS_JOB")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"No specific system privileges are required to use ",(0,l.kt)("inlineCode",{parentName:"li"},"DBMS_JOB"),"."),(0,l.kt)("li",{parentName:"ul"},"No system privileges are available to manage ",(0,l.kt)("inlineCode",{parentName:"li"},"DBMS_JOB"),"."),(0,l.kt)("li",{parentName:"ul"},"Jobs cannot be altered or deleted other than jobs owned by the user.")),(0,l.kt)("h3",{id:"dbms_jobsubmit"},"DBMS_JOB.SUBMIT"),(0,l.kt)("p",null,"To submit a job to the job queue, use the following syntax:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_JOB.SUBMIT(\n   job       OUT    BINARY_INTEGER,\n   what      IN     VARCHAR2,\n   next_date IN     DATE DEFAULT SYSDATE,\n   interval  IN     VARCHAR2 DEFAULT 'NULL',\n   no_parse  IN     BOOLEAN DEFAULT FALSE,\n   instance  IN     BINARY_INTEGER DEFAULT ANY_INSTANCE,\n   force     IN     BOOLEAN DEFAULT FALSE);\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"VARIABLE jobno number;\nBEGIN\n   DBMS_JOB.SUBMIT(:jobno,\n      'dbms_ddl.analyze_object(''TABLE'',\n      ''DQUON'', ''ACCOUNTS'',\n      ''ESTIMATE'', NULL, 50);'\n      SYSDATE, 'SYSDATE + 1');\n   COMMIT;\nEND;\n/\nStatement processed.\nprint jobno\nJOBNO\n----------\n14144\n")),(0,l.kt)("h3",{id:"dbms_jobchange"},"DBMS_JOB.CHANGE"),(0,l.kt)("p",null,"To alter user-definable parameters associated with a job, use the following syntax:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"}," DBMS_JOB.CHANGE(\n   JOB                   IN BINARY_INTEGER,\n   what                  IN VARCHAR2 DEFAULT NULL,\n   next_date             IN DATE DEFAULT NULL,\n   interval              IN VARCHAR2 DEFAULT NULL,\n   instance              IN BINARY_INTEGER DEFAULT NULL,\n   force                 IN BOOLEAN DEFAULT FALSE );\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN\n   DBMS_JOB.CHANGE(14144, null, null, 'sysdate+3');\n   COMMIT;\nEND;\n")),(0,l.kt)("h3",{id:"dbms_jobrun"},"DBMS_JOB.RUN"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_JOB.RUN(\n      job    IN BINARY_INTEGER,\n      force  IN BOOLEAN DEFAULT FALSE);\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"EXECUTE DBMS_JOB.RUN(14144);\n")),(0,l.kt)("h3",{id:"broken-procedure"},"BROKEN Procedure"),(0,l.kt)("p",null,"This procedure sets the broken flag. Broken jobs are never run."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_JOB.BROKEN (\n   job       IN  BINARY_INTEGER,\n   broken    IN  BOOLEAN,\n   next_date IN  DATE DEFAULT SYSDATE);\n")),(0,l.kt)("h3",{id:"interval-procedure"},"INTERVAL Procedure"),(0,l.kt)("p",null,"This procedure changes how often a job runs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_JOB.INTERVAL (\n   job       IN  BINARY_INTEGER,\n   interval  IN  VARCHAR2);\n")),(0,l.kt)("h3",{id:"next_date-procedure"},"NEXT_DATE Procedure"),(0,l.kt)("p",null,"This procedure changes when an existing job next runs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_JOB.NEXT_DATE (\n   job       IN  BINARY_INTEGER,\n   next_date IN  DATE);\n")),(0,l.kt)("h3",{id:"remove-procedure"},"REMOVE Procedure"),(0,l.kt)("p",null,"This procedure removes an existing job from the job queue. This currently does not stop a running job."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_JOB.REMOVE (\n   job       IN  BINARY_INTEGER );\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN\n   DBMS_JOB.REMOVE(14144);\n   COMMIT;\nEND;\n")),(0,l.kt)("h3",{id:"what-procedure"},"WHAT Procedure"),(0,l.kt)("p",null,"This procedure changes what an existing job does, and replaces its environment."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DBMS_JOB.WHAT (\n   job       IN  BINARY_INTEGER,\n   what      IN  VARCHAR2);\n")),(0,l.kt)("h2",{id:"difference-of-dbms_job-and-dbms_scheduler"},"Difference of ",(0,l.kt)("inlineCode",{parentName:"h2"},"DBMS_JOB")," and ",(0,l.kt)("inlineCode",{parentName:"h2"},"DBMS_SCHEDULER")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DBMS_SCHEDULER")," performs a commit"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dbms_scheduler")," has logging"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dbms_scheduler")," has job event handling (can raise and react upon events)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dbms_scheduler")," has resource manager integration")),(0,l.kt)("h2",{id:"benefits-that-dbms_scheduler-has-over-cron"},"Benefits that ",(0,l.kt)("inlineCode",{parentName:"h2"},"DBMS_SCHEDULER")," has over cron:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can make the execution of a job dependent on the completion of another job"),(0,l.kt)("li",{parentName:"ul"},"Robust resource balancing and flexible scheduling features"),(0,l.kt)("li",{parentName:"ul"},"Can run jobs based on a database event"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DBMS_SCHEDULER")," syntax works the same regardless of the operating system"),(0,l.kt)("li",{parentName:"ul"},"Can run status reports using the data dictionary"),(0,l.kt)("li",{parentName:"ul"},"If working in clustered environment, no need to worry about synchronizing multiple cron tables for each node in the cluster")),(0,l.kt)("h2",{id:"advantages-of-using-os-cron"},"Advantages of using OS cron:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Easy to use, simple, tried and true"),(0,l.kt)("li",{parentName:"ul"},"Almost universally available on all Linux/Unix boxes; for the most part, runs nearly identically regardless of the Linux/Unix platform (yes, there are minor differences)"),(0,l.kt)("li",{parentName:"ul"},"Database agnostic; operates independently of the database and works the same regardless of the database vendor or database version"),(0,l.kt)("li",{parentName:"ul"},"Works whether the database is available or not")))}m.isMDXComponent=!0}}]);