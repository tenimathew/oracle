"use strict";(self.webpackChunkoracle=self.webpackChunkoracle||[]).push([[866],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return b}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),b=n,d=u["".concat(s,".").concat(b)]||u[b]||m[b]||l;return a?r.createElement(d,o(o({ref:t},c),{},{components:a})):r.createElement(d,o({ref:t},c))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return m}});var r=a(7462),n=a(3366),l=(a(7294),a(3905)),o=["components"],i={id:"Section 13. Temporary Tables",sidebar_position:13,description:"Global temporary table, Private temporary table"},s=void 0,p={unversionedId:"oracle-basics/Section 13. Temporary Tables",id:"oracle-basics/Section 13. Temporary Tables",title:"Section 13. Temporary Tables",description:"Global temporary table, Private temporary table",source:"@site/docs/oracle-basics/temporary-tables.md",sourceDirName:"oracle-basics",slug:"/oracle-basics/Section 13. Temporary Tables",permalink:"/oracle/oracle-basics/Section 13. Temporary Tables",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{id:"Section 13. Temporary Tables",sidebar_position:13,description:"Global temporary table, Private temporary table"},sidebar:"tutorialSidebar",previous:{title:"Section 12. Constraints",permalink:"/oracle/oracle-basics/Section 12. Constraints"},next:{title:"Section 14. View",permalink:"/oracle/oracle-basics/Section 14. View"}},c={},m=[{value:"Global temporary tables",id:"global-temporary-tables",level:2},{value:"Private temporary tables",id:"private-temporary-tables",level:2},{value:"Private temporary tables vs. global temporary tables",id:"private-temporary-tables-vs-global-temporary-tables",level:2}],u={toc:m};function b(e){var t=e.components,a=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"global-temporary-tables"},"Global temporary tables"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A temporary table is a table that holds data only for the duration of a session or transaction."),(0,l.kt)("li",{parentName:"ul"},"Global temporary tables in Oracle are permanent database objects that store data on disk and visible to all sessions."),(0,l.kt)("li",{parentName:"ul"},"However, the data stored in the global temporary table is private to the session. In other words, each session can only access its own data in the global temporary table.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE GLOBAL TEMPORARY TABLE table_name (\n    column_definition,\n    ...,\n    table_constraints\n) ON COMMIT [DELETE ROWS | PRESERVE ROWS];\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"ON COMMIT DELETE ROWS")," clause specifies that the global temporary table is transaction-specific. It means that Oracle truncates the table (remove all rows) after each commit."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"ON COMMIT PRESERVE ROWS")," clause specifies that the global temporary table is session-specific, meaning that Oracle truncates the table when you terminate the session, not when you commit a transaction."),(0,l.kt)("li",{parentName:"ul"},"Oracle uses the ",(0,l.kt)("inlineCode",{parentName:"li"},"ON COMMIT DELETE ROWS")," option by default if you omit the ",(0,l.kt)("inlineCode",{parentName:"li"},"ON COMMIT")," clause."),(0,l.kt)("li",{parentName:"ul"},"Oracle allows you to create indexes on global temporary tables."),(0,l.kt)("li",{parentName:"ul"},"It is not possible to perform a DDL operation (except ",(0,l.kt)("inlineCode",{parentName:"li"},"TRUNCATE"),") on an existing global temporary table if one or more sessions are currently bound to that table."),(0,l.kt)("li",{parentName:"ul"},"Oracle only allows one transaction at a time on a transaction-specific temporary table."),(0,l.kt)("li",{parentName:"ul"},"If you have several autonomous transactions in a single transaction scope, you must commit the previous autonomous transaction before the next transaction can use the table."),(0,l.kt)("li",{parentName:"ul"},"Due to the nature of temporary tables, backup and recovery are not available in case of a system failure.")),(0,l.kt)("h2",{id:"private-temporary-tables"},"Private temporary tables"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Oracle 18c introduced the private temporary table, which is a memory-based temporary table that is automatically dropped at the end of a session or transaction."),(0,l.kt)("li",{parentName:"ul"},"Oracle stores private temporary tables in memory and each temporary table is only visible to the session which created it."),(0,l.kt)("li",{parentName:"ul"},"All private temporary tables have a prefix defined by the ",(0,l.kt)("inlineCode",{parentName:"li"},"PRIVATE_TEMP_TABLE_PREFIX")," initialization parameter, which defaults to to ",(0,l.kt)("inlineCode",{parentName:"li"},"ORA$PTT_"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE PRIVATE TEMPORARY TABLE table_name(\n    column_definition,\n    ...\n) ON COMMIT [DROP DEFINITION | PRESERVE DEFINITION];\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"ON COMMIT DROP DEFINITION")," option creates a private temporary table that is transaction-specific. At the end of the transaction, Oracle drops both table definition and data."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"ON COMMIT PRESERVE DEFINITION")," option creates a private temporary table that is session-specific. Oracle removes all data and drops the table at the end of the session."),(0,l.kt)("li",{parentName:"ul"},"By default, Oracle uses ",(0,l.kt)("inlineCode",{parentName:"li"},"ON COMMIT DROP DEFINITION")," if you omit the ",(0,l.kt)("inlineCode",{parentName:"li"},"ON COMMIT")," option.")),(0,l.kt)("h2",{id:"private-temporary-tables-vs-global-temporary-tables"},"Private temporary tables vs. global temporary tables"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Characteristic"),(0,l.kt)("th",{parentName:"tr",align:null},"Global temporary tables"),(0,l.kt)("th",{parentName:"tr",align:null},"Private temporary tables"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Naming rule"),(0,l.kt)("td",{parentName:"tr",align:null},"Same as for permanent tables"),(0,l.kt)("td",{parentName:"tr",align:null},"By default, must be prefixed with ORA$PTT","_"," .")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Visibility"),(0,l.kt)("td",{parentName:"tr",align:null},"All sessions"),(0,l.kt)("td",{parentName:"tr",align:null},"Only the session that created the table.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Storages"),(0,l.kt)("td",{parentName:"tr",align:null},"Disk"),(0,l.kt)("td",{parentName:"tr",align:null},"Memory only")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Table types"),(0,l.kt)("td",{parentName:"tr",align:null},"Transaction-specific (ON COMMIT DELETE ROWS) or session-specific (ON COMMIT PRESERVE ROWS)"),(0,l.kt)("td",{parentName:"tr",align:null},"Transaction-specific (ON COMMIT DROP DEFINITION) or session-specific (ON COMMIT PRESERVE DEFINITION)")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Permanent database objects cannot directly reference private temporary tables."),(0,l.kt)("li",{parentName:"ul"},"Indexes and materialized views cannot be created on private temporary tables."),(0,l.kt)("li",{parentName:"ul"},"Columns of the private temporary table cannot have default values."),(0,l.kt)("li",{parentName:"ul"},"Private temporary tables cannot be accessed via database links.")))}b.isMDXComponent=!0}}]);